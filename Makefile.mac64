PLUGDIR=openSAM-pkg/openSAM

PLUGDIR_XP12=openSAM-pkg/openSAM
PLUGDIR_XP11=openSAM-pkg_XP11/openSAM

include Makefile.common

OBJDIR=./OBJ_osx

TARGET_XP12=$(OBJDIR)/openSAM.xpl
TARGET_XP11=$(OBJDIR)/openSAM.xpl_xp11

HEADERS=$(wildcard *.h)
OBJECTS_XP12_arm=$(addprefix $(OBJDIR)/, $(SOURCES:.cpp=.o_arm)) $(OBJDIR)/jwctrl_sound.o_arm
OBJECTS_XP12_x86=$(OBJECTS_XP12_arm:.o_arm=.o_x86)

OBJECTS_XP11_arm=$(addprefix $(OBJDIR)/, $(SOURCES:.cpp=.o_arm)) $(OBJDIR)/jwctrl_sound_xp11.o_arm
OBJECTS_XP11_x86=$(OBJECTS_XP11_arm:.o_arm=.o_x86)

# if we run this script on Linux it's osxcross
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Darwin)
    CCx=clang -target x86_64-apple-macos13
    CCa=clang -target arm64-apple-macos13

    CXXx=clang++ -target x86_64-apple-macos13
    CXXa=clang++ -target arm64-apple-macos13
    LIBEXPAT=/opt/local/lib/libexpat.a
else
    PATH:=/osxcross/target/bin:$(PATH)
    CCx=o64-clang -mmacosx-version-min=13.0
    CCa=oa64-clang -mmacosx-version-min=13.0

    CXXx=o64-clang++ -mmacosx-version-min=13.0
    CXXa=oa64-clang++ -mmacosx-version-min=13.0
    LIBEXPAT=/osxcross/target/macports/pkgs/opt/local/lib/libexpat.a
    # the latest SDK has a framework format that is currently not understood by osxcross
    SDK=../SDK-4.0.1
endif

DEFS= -DAPL=1 -fPIC -fno-stack-protector -fvisibility=hidden -ffast-math -Wno-deprecated-declarations $(DEFINES)

CXXFLAGS+=$(CXXSTD) $(OPT) -Wall $(INCLUDES) $(DEBUG) $(DEFS)

LNFLAGS+=-dynamiclib -shared -rdynamic -fvisibility=hidden -Wl,-exported_symbols_list -Wl,linkscript.mac

# https://pewpewthespells.com/blog/static_and_dynamic_libraries.html
LIBS+= -F $(SDK)/Libraries/Mac -framework XPLM -framework XPWidgets

# ships with macOS or macPorts
LIBS+=$(LIBEXPAT)

#test:
#    $(foreach var,$(.VARIABLES),$(info $(var) = $($(var))))

all: $(TARGET_XP12) $(TARGET_XP11)
    $(shell [ -d $(OBJDIR) ] || mkdir $(OBJDIR))

$(OBJDIR)/%.o_arm: %.cpp $(HEADERS)
	$(CXXa) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/%.o_x86: %.cpp $(HEADERS)
	$(CXXx) $(CXXFLAGS) -o $@ -c $<

$(TARGET_XP12)_arm: $(OBJECTS_XP12_arm)
	$(CXXa) -o $@ $(LNFLAGS) $(OBJECTS_XP12_arm) $(LIBS)

$(TARGET_XP12)_x86: $(OBJECTS_XP12_x86)
	$(CXXx) -o $@ $(LNFLAGS) $(OBJECTS_XP12_x86) $(LIBS)

$(TARGET_XP12): $(TARGET_XP12)_arm $(TARGET_XP12)_x86
	lipo -create -output $@ $(TARGET_XP12)_arm $(TARGET_XP12)_x86
	mkdir -p "$(PLUGDIR_XP12)/mac_x64"
	cp -p $(TARGET_XP12) "$(PLUGDIR_XP12)/mac_x64/openSAM.xpl"

$(TARGET_XP11)_arm: $(OBJECTS_XP11_arm)
	$(CXXa) -o $@ $(LNFLAGS) $(OBJECTS_XP11_arm) $(LIBS) -framework OpenAL

$(TARGET_XP11)_x86: $(OBJECTS_XP11_x86)
	$(CXXx) -o $@ $(LNFLAGS) $(OBJECTS_XP11_x86) $(LIBS) -framework OpenAL

$(TARGET_XP11): $(TARGET_XP11)_arm $(TARGET_XP11)_x86
	lipo -create -output $@ $(TARGET_XP11)_arm $(TARGET_XP11)_x86
	mkdir -p "$(PLUGDIR_XP11)/mac_x64"
	cp -p $(TARGET_XP11) "$(PLUGDIR_XP11)/mac_x64/openSAM.xpl"

clean:
	rm -f $(TARGET) $(OBJDIR)/*.o_* $(OBJDIR)/*.xpl_*
