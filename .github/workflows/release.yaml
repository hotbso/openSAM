name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        xp_version: [11, 12]
    steps:
      - uses: actions/checkout@v3

      - name: Get XPlane SDK
        shell: bash
        run: |
            SDK_VERSION=411
            curl -L "https://developer.x-plane.com/wp-content/plugins/code-sample-generation/sdk_zip_files/XPSDK${SDK_VERSION}.zip" -o "XPSDK${SDK_VERSION}.zip"
            unzip XPSDK${SDK_VERSION}.zip
            mv SDK ../
      
      - name: Build Executable
        shell: bash
        env:
          OS: ${{ matrix.os }}
          XP_VERSION: ${{ matrix.xp_version }}
        run: |
          if [ $OS == "ubuntu-latest" ]; then
            make -f Makefile.lin64
          else
            if [ $OS == "windows-latest" ]; then
              make -f Makefile.mgw64
            else
              brew install expat
              brew install clang
              brew install llvm
              make -f Makefile.osxcross
            fi
          fi
            

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./build

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.workspace }}/build/windows-latest-build/o4xp_2_xp12.exe
            ${{ github.workspace }}/build/ubuntu-latest-build/o4xp_2_xp12_ubuntu-latest
            ${{ github.workspace }}/build/macos-13-build/o4xp_2_xp12_macos-13
          prerelease: ${{ contains(github.ref_name, '-') }}